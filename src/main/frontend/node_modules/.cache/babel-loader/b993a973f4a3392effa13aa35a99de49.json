{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\pro\\\\src\\\\main\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Form from \"./Components/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    birthday: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const inputs = [{\n    id: 1,\n    name: \"username\",\n    type: \"text\",\n    placeholder: \"Имя пользователя\",\n    errorMessage: \"В имени пользователя должно быть от 3 до 16 символов, \" + \"и имя не должно содержать специальные символы!\",\n    label: \"Имя пользователя\",\n    pattern: \"^[A-Za-z0-9]{3,16}$\",\n    required: true\n  }, {\n    id: 2,\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Пароль\",\n    errorMessage: \"Длина пароля должна быть от 8 до 20 символов, и \" + \"пароль должен содержать как минимум 1 букву, 1 цифру и \" + \"1 специальный символ !\",\n    label: \"Пароль\",\n    pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n    required: true\n  }, {\n    id: 3,\n    name: \"confirmPassword\",\n    type: \"password\",\n    placeholder: \"Подтвеждение пароля\",\n    errorMessage: \"Пароли не совпадают!\",\n    label: \"Подтверждение пароля\",\n    pattern: values.password,\n    required: true\n  }];\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  const onChange = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"atV1BigqY92Z7BtfdZqatvT35Oo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/user/Downloads/pro/src/main/frontend/src/App.js"],"names":["useState","Form","App","values","setValues","username","email","birthday","password","confirmPassword","inputs","id","name","type","placeholder","errorMessage","label","pattern","required","handleSubmit","e","preventDefault","onChange","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC;AACnCK,IAAAA,QAAQ,EAAE,EADyB;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,QAAQ,EAAE,EAHyB;AAInCC,IAAAA,QAAQ,EAAE,EAJyB;AAKnCC,IAAAA,eAAe,EAAE;AALkB,GAAD,CAApC;AAQA,QAAMC,MAAM,GAAG,CACb;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,IAAI,EAAE,MAHR;AAIEC,IAAAA,WAAW,EAAE,kBAJf;AAKEC,IAAAA,YAAY,EACR,2DACA,gDAPN;AAQEC,IAAAA,KAAK,EAAE,kBART;AASEC,IAAAA,OAAO,EAAE,qBATX;AAUEC,IAAAA,QAAQ,EAAE;AAVZ,GADa,EAab;AACEP,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,IAAI,EAAE,UAHR;AAIEC,IAAAA,WAAW,EAAE,QAJf;AAKEC,IAAAA,YAAY,EACR,qDACA,yDADA,GAEA,wBARN;AASEC,IAAAA,KAAK,EAAE,QATT;AAUEC,IAAAA,OAAO,EAAG,sEAVZ;AAWEC,IAAAA,QAAQ,EAAE;AAXZ,GAba,EA0Bb;AACEP,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,IAAI,EAAE,UAHR;AAIEC,IAAAA,WAAW,EAAE,qBAJf;AAKEC,IAAAA,YAAY,EAAE,sBALhB;AAMEC,IAAAA,KAAK,EAAE,sBANT;AAOEC,IAAAA,OAAO,EAAEd,MAAM,CAACK,QAPlB;AAQEU,IAAAA,QAAQ,EAAE;AARZ,GA1Ba,CAAf;;AAsCA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAIF,CAAD,IAAO;AACtBhB,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACiB,CAAC,CAACG,MAAF,CAASX,IAAV,GAAiBQ,CAAC,CAACG,MAAF,CAASC;AAAvC,KAAD,CAAT;AACD,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAMD,CA7DD;;GAAMtB,G;;KAAAA,G;AA+DN,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport Form from \"./Components/Form\";\n\n\nconst App = () => {\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    birthday: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const inputs = [\n    {\n      id: 1,\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"Имя пользователя\",\n      errorMessage:\n          \"В имени пользователя должно быть от 3 до 16 символов, \" +\n          \"и имя не должно содержать специальные символы!\",\n      label: \"Имя пользователя\",\n      pattern: \"^[A-Za-z0-9]{3,16}$\",\n      required: true,\n    },\n    {\n      id: 2,\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Пароль\",\n      errorMessage:\n          \"Длина пароля должна быть от 8 до 20 символов, и \" +\n          \"пароль должен содержать как минимум 1 букву, 1 цифру и \" +\n          \"1 специальный символ !\",\n      label: \"Пароль\",\n      pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{8,20}$`,\n      required: true,\n    },\n    {\n      id: 3,\n      name: \"confirmPassword\",\n      type: \"password\",\n      placeholder: \"Подтвеждение пароля\",\n      errorMessage: \"Пароли не совпадают!\",\n      label: \"Подтверждение пароля\",\n      pattern: values.password,\n      required: true,\n    },\n  ];\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  const onChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  return (\n      <div className=\"app\">\n        <Form>\n        </Form>\n      </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}