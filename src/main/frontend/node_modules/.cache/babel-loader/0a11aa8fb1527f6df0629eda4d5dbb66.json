{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\pro\\\\src\\\\main\\\\frontend\\\\src\\\\Components\\\\LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport AuthenticationService from \"../Service/AuthenticationService\";\nimport Form from \"./Form\";\nimport { useState } from \"react\";\nimport \"./registrationForm.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegistrationForm = props => {\n  _s();\n\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const inputs = [{\n    id: 1,\n    name: \"username\",\n    type: \"text\",\n    placeholder: \"Имя пользователя\",\n    errorMessage: \"Пожалуйста, введите корректное имя пользователя.\",\n    label: \"Имя пользователя\",\n    pattern: \"^[A-Za-z0-9]{3,16}$\",\n    required: true\n  }, {\n    id: 2,\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Пароль\",\n    errorMessage: \"Пожалуйста, введите корректный пароль.\",\n    label: \"Пароль\",\n    pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])[a-zA-Z0-9!@#$%^&*-]{8,20}$`,\n    required: true\n  }];\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    AuthenticationService.login(e.target.username.value, e.target.password.value).then(res => {\n      this.props.history.push(\"/success\");\n    });\n  };\n\n  const onChange = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    onChange: onChange,\n    inputs: inputs,\n    values: values,\n    title: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\",\n    buttonTitle: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegistrationForm, \"L5TtwPI7fA6oUB0lsrZZc4FFNkA=\");\n\n_c = RegistrationForm;\nexport default RegistrationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["C:/Users/user/Downloads/pro/src/main/frontend/src/Components/LoginForm.jsx"],"names":["AuthenticationService","Form","useState","useHistory","RegistrationForm","props","values","setValues","username","password","inputs","id","name","type","placeholder","errorMessage","label","pattern","required","handleSubmit","e","preventDefault","login","target","value","then","res","history","push","onChange"],"mappings":";;;AAAA,OAAOA,qBAAP,MAAkC,kCAAlC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,wBAAP;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;AACjCM,IAAAA,QAAQ,EAAE,EADuB;AAEjCC,IAAAA,QAAQ,EAAE;AAFuB,GAAD,CAApC;AAKA,QAAMC,MAAM,GAAG,CACX;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,IAAI,EAAE,MAHV;AAIIC,IAAAA,WAAW,EAAE,kBAJjB;AAKIC,IAAAA,YAAY,EACR,kDANR;AAOIC,IAAAA,KAAK,EAAE,kBAPX;AAQIC,IAAAA,OAAO,EAAE,qBARb;AASIC,IAAAA,QAAQ,EAAE;AATd,GADW,EAYX;AACIP,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,UAFV;AAGIC,IAAAA,IAAI,EAAE,UAHV;AAIIC,IAAAA,WAAW,EAAE,QAJjB;AAKIC,IAAAA,YAAY,EAAC,wCALjB;AAMIC,IAAAA,KAAK,EAAE,QANX;AAOIC,IAAAA,OAAO,EAAG,uDAPd;AAQIC,IAAAA,QAAQ,EAAE;AARd,GAZW,CAAf;;AAwBA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACArB,IAAAA,qBAAqB,CAACsB,KAAtB,CAA4BF,CAAC,CAACG,MAAF,CAASf,QAAT,CAAkBgB,KAA9C,EAAqDJ,CAAC,CAACG,MAAF,CAASd,QAAT,CAAkBe,KAAvE,EAA8EC,IAA9E,CAAoFC,GAAD,IAAS;AACxF,WAAKrB,KAAL,CAAWsB,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACH,KAFD;AAIH,GAND;;AAQA,QAAMC,QAAQ,GAAIT,CAAD,IAAO;AACpBb,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACc,CAAC,CAACG,MAAF,CAASX,IAAV,GAAiBQ,CAAC,CAACG,MAAF,CAASC;AAAvC,KAAD,CAAT;AACH,GAFD;;AAIA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AACM,IAAA,QAAQ,EAAEU,QADhB;AAEM,IAAA,MAAM,EAAEnB,MAFd;AAGM,IAAA,MAAM,EAAEJ,MAHd;AAIM,IAAA,KAAK,EAAC,oEAJZ;AAKM,IAAA,WAAW,EAAC;AALlB;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CApDD;;GAAMF,gB;;KAAAA,gB;AAsDN,eAAeA,gBAAf","sourcesContent":["import AuthenticationService from \"../Service/AuthenticationService\";\r\nimport Form from \"./Form\";\r\nimport { useState } from \"react\";\r\nimport \"./registrationForm.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst RegistrationForm = (props) => {\r\n    const [values, setValues] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const inputs = [\r\n        {\r\n            id: 1,\r\n            name: \"username\",\r\n            type: \"text\",\r\n            placeholder: \"Имя пользователя\",\r\n            errorMessage:\r\n                \"Пожалуйста, введите корректное имя пользователя.\",\r\n            label: \"Имя пользователя\",\r\n            pattern: \"^[A-Za-z0-9]{3,16}$\",\r\n            required: true,\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"password\",\r\n            type: \"password\",\r\n            placeholder: \"Пароль\",\r\n            errorMessage:\"Пожалуйста, введите корректный пароль.\",\r\n            label: \"Пароль\",\r\n            pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])[a-zA-Z0-9!@#$%^&*-]{8,20}$`,\r\n            required: true,\r\n        },\r\n    ];\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        AuthenticationService.login(e.target.username.value, e.target.password.value).then((res) => {\r\n            this.props.history.push(\"/success\");\r\n        });\r\n\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}\r\n              onChange={onChange}\r\n              inputs={inputs}\r\n              values={values}\r\n              title=\"Авторизация\"\r\n              buttonTitle=\"Войти\"\r\n        >\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default RegistrationForm;"]},"metadata":{},"sourceType":"module"}