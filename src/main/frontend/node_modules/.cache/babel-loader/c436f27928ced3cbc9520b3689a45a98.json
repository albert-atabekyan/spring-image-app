{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\pro\\\\src\\\\main\\\\frontend\\\\src\\\\Components\\\\RegistrationForm.jsx\",\n    _s = $RefreshSig$();\n\nimport AuthenticationService from \"../Service/AuthenticationService\";\nimport Form from \"./Form\";\nimport { useState } from \"react\";\nimport \"../css/registrationForm.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegistrationForm = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const inputs = [{\n    id: 1,\n    name: \"username\",\n    type: \"text\",\n    placeholder: \"Имя пользователя\",\n    errorMessage: \"В имени пользователя должно быть от 3 до 16 символов, \" + \"и имя не должно содержать специальные символы!\",\n    label: \"Имя пользователя\",\n    pattern: \"^[A-Za-z0-9]{3,16}$\",\n    required: true\n  }, {\n    id: 2,\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Пароль\",\n    errorMessage: \"Длина пароля должна быть от 8 до 20 символов, и \" + \"пароль должен содержать как минимум 1 букву, 1 цифру и \" + \"1 специальный символ !\",\n    label: \"Пароль\",\n    pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])[a-zA-Z0-9!@#$%^&*-]{8,20}$`,\n    required: true\n  }, {\n    id: 3,\n    name: \"confirmPassword\",\n    type: \"password\",\n    placeholder: \"Подтвеждение пароля\",\n    errorMessage: \"Пароли не совпадают!\",\n    label: \"Подтверждение пароля\",\n    pattern: values.password,\n    required: true\n  }];\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(e.target.username.value);\n    console.log(e.target.password.value);\n    AuthenticationService.register(e.target.username.value, e.target.password.value).then(() => {});\n    navigate(\"/success\", {\n      replace: true\n    });\n  };\n\n  const onChange = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      onChange: onChange,\n      inputs: inputs,\n      values: values,\n      title: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\",\n      buttonTitle: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegistrationForm, \"7unb9ZMjfPA/bOYNUMTsp012EsI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RegistrationForm;\nexport default RegistrationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["C:/Users/user/Downloads/pro/src/main/frontend/src/Components/RegistrationForm.jsx"],"names":["AuthenticationService","Form","useState","useNavigate","RegistrationForm","props","navigate","values","setValues","username","password","confirmPassword","inputs","id","name","type","placeholder","errorMessage","label","pattern","required","handleSubmit","e","preventDefault","console","log","target","value","register","then","replace","onChange"],"mappings":"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","sourcesContent":["import AuthenticationService from \"../Service/AuthenticationService\";\r\nimport Form from \"./Form\";\r\nimport { useState } from \"react\";\r\nimport \"../css/registrationForm.css\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst RegistrationForm = (props) => {\r\n    const navigate = useNavigate();\r\n\r\n    const [values, setValues] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n\r\n    const inputs = [\r\n        {\r\n            id: 1,\r\n            name: \"username\",\r\n            type: \"text\",\r\n            placeholder: \"Имя пользователя\",\r\n            errorMessage:\r\n                \"В имени пользователя должно быть от 3 до 16 символов, \" +\r\n                \"и имя не должно содержать специальные символы!\",\r\n            label: \"Имя пользователя\",\r\n            pattern: \"^[A-Za-z0-9]{3,16}$\",\r\n            required: true,\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"password\",\r\n            type: \"password\",\r\n            placeholder: \"Пароль\",\r\n            errorMessage:\r\n                \"Длина пароля должна быть от 8 до 20 символов, и \" +\r\n                \"пароль должен содержать как минимум 1 букву, 1 цифру и \" +\r\n                \"1 специальный символ !\",\r\n            label: \"Пароль\",\r\n            pattern: `^(?=.*[0-9])(?=.*[a-zA-Z])[a-zA-Z0-9!@#$%^&*-]{8,20}$`,\r\n            required: true,\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"confirmPassword\",\r\n            type: \"password\",\r\n            placeholder: \"Подтвеждение пароля\",\r\n            errorMessage: \"Пароли не совпадают!\",\r\n            label: \"Подтверждение пароля\",\r\n            pattern: values.password,\r\n            required: true,\r\n        },\r\n    ];\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(e.target.username.value);\r\n        console.log(e.target.password.value);\r\n        AuthenticationService.register(e.target.username.value, e.target.password.value).then(() => {\r\n        });\r\n        navigate(\"/success\", {replace:true})\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Form onSubmit={handleSubmit}\r\n                  onChange={onChange}\r\n                  inputs={inputs}\r\n                  values={values}\r\n                  title=\"Регистрация\"\r\n                  buttonTitle=\"Зарегистрироваться\"\r\n            >\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegistrationForm;"]},"metadata":{},"sourceType":"module"}